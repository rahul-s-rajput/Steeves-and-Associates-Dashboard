# -----------------------------------------------------------------------------
# -- Environment Variables for Education Dashboard                             --
# -----------------------------------------------------------------------------
#
# This file serves as a template for the required environment variables.
# To use, copy this file to a new file named ".env" in the same directory
# and replace the placeholder values with your actual configuration.

# =============================================================================
# == PostgreSQL Database Configuration                                       ==
# =============================================================================
#
# These variables are required for both the Flask backend and the data
# migration scripts. The application will not start if any are missing.
#
DB_HOST=localhost
DB_NAME=dashboard
DB_USER=dashboard_user
DB_PASSWORD=your_secure_password
DB_PORT=5432

# =============================================================================
# == Large Language Model (LLM) API Keys                                     ==
# =============================================================================
#
# These API keys are required for the chatbot's AI capabilities.
# The chatbot functionality will not work if these are not provided.
#
# Used by the RAG system for embedding documents and generating chatbot query responses.
GEMINI_API_KEY=your_google_gemini_api_key
#
# Used by the data ingestion script for knowledge graph operations (e.g., entity extraction)
# when building the knowledge base.
MISTRAL_API_KEY=your_mistral_api_key

# =============================================================================
# == LightRAG and Chatbot Configuration (Optional)                           ==
# =============================================================================
#
# These variables allow for fine-tuning the performance and behavior of the
# RAG (Retrieval-Augmented Generation) system. The default values are
# generally sufficient for standard operation.
#
# Maximum number of parallel workers for inserting data into the vector store.
MAX_PARALLEL_INSERT=2
#
# Maximum number of asynchronous operations for the LLM.
MAX_ASYNC=8
#
# The number of top documents to retrieve from the vector store for a query.
TOP_K=80 